### SERVER Setup
- mkdir zoom && cd zoom 
- npm init -y 
- touch README.md
- npm i nodemon -D
- babel.config.json && nodemon.json 파일 생성 
- src폴더 생성 및 server.js 파일 생성 
- git init  
- npm i @babel/core @babel/cli @babel/node -D
- touch .gitignore (node_modules추가)
- nodemon.json => "exec": "babel-node src/server.js"
- babel.config.json =>  "presets" : ["@babel/preset-env"]
- npm i @babel/preset-env -D
- package.json 스크립트 추가 => "scripts": {"dev": "nodemon"},
- npm i express pug  

### FRONT Setup
- app.set("view engine", "pug");
- app.set("views", __dirname + "/src/views");
- app.get("/", (req, res) => res.render("home"));
- app.use("/public", express.static(__dirname + "/public"));
- MVP CSS import
- <link rel="stylesheet" href="https://unpkg.com/mvp.css">
- server.js는 Backend에서 구동될거고 app.js는 FrontEnd에서 구동된다. 
- express.static은 유저에게 /public으로 가면 public폴더를 볼수 있도록 허용하는것이다. 

### Websocket
- HTTP vs WebSocket 둘다 모두 프로토콜이다. 
- 인터넷 전체가 http를 기반으로 만들어져있다.
- http는 stateless이다. 유저와 서버사이에 아무런 연결이 없다. 서버는 유저가 누구인지 잊어버린다.
- webSocket연결이 일어날땐 마치 악수처럼 작동한다. 
- 브라우저가 서버로 webSocket request를 보내면, 서버가 받거나 거절한다. 
- 브라우저와 서버가 서로 커뮤니케이션하는 터널이다. (bi-directional connection 양방향 연결)
- 서버는 브라우저에게 어떤때나 메세지를 보낼수 있다.   
- 브라우저에는 내장된 webSocket API가 있다. 
- WebSocket은 어떤 프로그래밍 언어에 국한되어 있지않다. 그저 protocol일뿐 
- real-time으로 소통하는 2개의 서버 사이에서도 작동한다. 
- protocol은 어떤 사람들이 어딘가에 있는 방에서 만나고 어떻게 일들이 진행될지를 결정한다. 어떻게 모든것이 돌아가야할지에 대한 규칙을 만든다. 그런 다음, 프로그래머는 이 규칙을 가지고 이 규칙을 따르는 코드를 만들어서 실행한다. 
- ws는 webSocket protocol을 실행하는 package이다. 
- 채팅방은 ws에 포함되어 있지 않다. 채팅방이 webSocket protocol의 일부분이 아니기 때문이다. 
- 채팅방을 위해서는 ws로 만든 framework를 사용하면 된다. 
- ws는 webSocket의 core(핵심)이다. (완전 기초가 되는 밑바탕)
- npm i ws
- WebSocket도 event가 있고, event가 발동될때 사용할 function을 만들면 된다. 
- webSocket은 listen할 특정한 event명이 있다. 
- socket은 연결된 어떤 사람이다. 연결된 브라우저와의 contact라인이다. 
- socket을 이용하면 메세지를 주고 받을수 있다.
- wss.on("connection")에서 on 메소드는 event가 발동하는걸 기다린다. 여기서 event는 connection이다. 
- on 메소드는 socket에서 백엔드에 연결된 사람의 정보를 제공해준다. 
- webSocket은 브라우저와 서버사이의 연결이다. 
- server.js의 socket은 연결된 브라우저를 뜻한다. 
- app.js의 socket은 서버로의 연결을 뜻한다. 